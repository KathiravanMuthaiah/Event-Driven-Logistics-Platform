# application.properties
quarkus.http.port=9193
quarkus.devservices.enabled=false
# Kafka Bootstrap
mp.messaging.connector.smallrye-kafka.bootstrap.servers=localhost:9094

# Sensor topic binding
mp.messaging.incoming.sensor-in.topic=sensor-topic
mp.messaging.incoming.sensor-in.connector=smallrye-kafka
mp.messaging.incoming.sensor-in.failure-strategy=fail
mp.messaging.incoming.sensor-in.retry=true
mp.messaging.incoming.sensor-in.retry-attempts=3
mp.messaging.incoming.sensor-in.group.id=sensor-consumer-group
mp.messaging.incoming.sensor-in.auto.offset.reset=earliest
mp.messaging.incoming.sensor-in.value.deserializer=com.bauto.postgreswriter.deserializer.SensorDataDeserializer

# Calloff topic binding
mp.messaging.incoming.calloff-in.topic=call-off-topic
mp.messaging.incoming.calloff-in.connector=smallrye-kafka
mp.messaging.incoming.calloff-in.failure-strategy=fail
mp.messaging.incoming.calloff-in.retry=true
mp.messaging.incoming.calloff-in.retry-attempts=3
mp.messaging.incoming.calloff-in.group.id=calloff-consumer-group
mp.messaging.incoming.calloff-in.auto.offset.reset=earliest
mp.messaging.incoming.calloff-in.value.deserializer=com.bauto.postgreswriter.deserializer.CallOffEventDeserializer

# jit topic binding
mp.messaging.incoming.jit-in.topic=jit-topic
mp.messaging.incoming.jit-in.connector=smallrye-kafka
mp.messaging.incoming.jit-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# jic topic binding
mp.messaging.incoming.jic-in.topic=jic-topic
mp.messaging.incoming.jic-in.connector=smallrye-kafka
mp.messaging.incoming.jic-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer


# jis topic binding
mp.messaging.incoming.jis-in.topic=jis-topic
mp.messaging.incoming.jis-in.connector=smallrye-kafka
mp.messaging.incoming.jis-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer




# JDBC Datasource
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=logisticadmin
quarkus.datasource.password=secret

quarkus.datasource.jdbc=true
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/logisticdb

quarkus.datasource.jdbc.driver=org.postgresql.Driver
quarkus.datasource.jdbc.max-size=10
quarkus.datasource.jdbc.min-size=2

# Enable reactive PostgreSQL client
quarkus.datasource.reactive.url=postgresql://localhost:5432/logisticdb
quarkus.datasource.reactive.max-size=20


# Use plain console format (no JSON)
quarkus.log.console.json=false
quarkus.log.file.json=false

# Logging File Output
quarkus.log.file.enable=true
quarkus.log.file.path=logs/applog.log
quarkus.log.file.rotation.max-file-size=10M
quarkus.log.file.rotation.max-backup-index=5

# Optional: Format
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.file.format=%d{yyyy-MM-dd HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n

# Log levels
# Root Log Level
quarkus.log.level=INFO
quarkus.log.category."com.bauto".level=DEBUG
quarkus.log.category."io.smallrye.reactive".level=DEBUG
quarkus.log.category."org.apache.kafka".level=DEBUG
quarkus.log.category."io.vertx.pgclient".level=DEBUG
quarkus.log.category."io.vertx.sqlclient".level=DEBUG
